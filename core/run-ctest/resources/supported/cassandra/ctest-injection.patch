diff --git a/src/java/org/apache/cassandra/config/YamlConfigurationLoader.java b/src/java/org/apache/cassandra/config/YamlConfigurationLoader.java
index a8d4695cb0..df3b52de88 100644
--- a/src/java/org/apache/cassandra/config/YamlConfigurationLoader.java
+++ b/src/java/org/apache/cassandra/config/YamlConfigurationLoader.java
@@ -61,6 +61,7 @@ public class YamlConfigurationLoader implements ConfigurationLoader
     private static final Logger logger = LoggerFactory.getLogger(YamlConfigurationLoader.class);
 
     private final static String DEFAULT_CONFIGURATION = "cassandra.yaml";
+    private final static String CTEST_CONFIGURATION = "ctest-injected.yaml";
 
     /**
      * Inspect the classpath to find storage configuration file
@@ -106,7 +107,44 @@ public class YamlConfigurationLoader implements ConfigurationLoader
     {
         if (storageConfigURL == null)
             storageConfigURL = getStorageConfigURL();
-        return loadConfig(storageConfigURL);
+
+        logger.debug("Loading settings from {}", storageConfigURL);
+        byte[] configBytes;
+        Map<String, Object> confMap = new HashMap<>();
+        URL url;
+        Yaml yaml = new Yaml();
+        try (InputStream is = storageConfigURL.openStream()) {
+            configBytes = ByteStreams.toByteArray(is);
+            Map<String, Object> obj = yaml.load(new ByteArrayInputStream(configBytes));
+            confMap.putAll(obj);
+        } catch (IOException e) {
+            // getStorageConfigURL should have ruled this out
+            throw new AssertionError(e);
+        }
+
+        try {
+            url = new URL(CTEST_CONFIGURATION);
+            url.openStream().close(); // catches well-formed but bogus URLs
+        } catch (Exception e) {
+            ClassLoader loader = DatabaseDescriptor.class.getClassLoader();
+            url = loader.getResource(CTEST_CONFIGURATION);
+            if (url == null) {
+                throw new ConfigurationException("fail to load Ctest config");
+            }
+        }
+        logger.debug("Loading settings from {}", url);
+        try (InputStream is = url.openStream()) {
+            configBytes = ByteStreams.toByteArray(is);
+            Map<String, Object> obj = yaml.load(new ByteArrayInputStream(configBytes));
+            if (obj != null) {
+                confMap.putAll(obj);
+            }
+        } catch (IOException e) {
+            // getStorageConfigURL should have ruled this out
+            throw new AssertionError(e);
+        }
+
+        return fromMap(confMap, Config.class);
     }
 
     public Config loadConfig(URL url) throws ConfigurationException
